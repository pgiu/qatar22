import Head from 'next/head'
import dayjs from 'dayjs'

const customParseFormat = require('dayjs/plugin/customParseFormat')
dayjs.extend(customParseFormat)
import styles from '../styles/Home.module.css'

interface Game {
  _id: string;
  home_team_en: string;
  away_team_en: string;
  home_flag: string;
  away_flag: string;
  local_date: string;
  time_elapsed: string;
  home_score: number;
  away_score: number;
  group: string;
  finished: 'FALSE'|'TRUE';
  home_scorers: string[];
  away_scorers: string[];
}

export default function Home({games, error}) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Qatar 2022 Results
        </h1>

        <p className={styles.description}>
          { `Games of the day ${dayjs().format('MM/DD/YYYY')}`}
        </p>

        <div className={styles.grid}>
          {
            error ? error :
              games ? games.map((g: Game) =>
                  <div className={styles.card} key={g._id}>
                    <table>
                      <tr>
                        <td>
                          <p>{dayjs(g.local_date, "MM-DD-YYYY").format('DD/MM/YY')}</p>
                        </td>
                      </tr>
                      <tr>
                        <td>
                          {g.finished === 'TRUE'? 'finished' : g.time_elapsed}
                        </td>
                      </tr>
                      <tr>
                        <td>
                          <h2>
                            {g.home_team_en} {g.home_score}
                          </h2>
                        </td>
                        <td>
                          <h2>
                            {g.away_score} {g.away_team_en}
                          </h2>
                        </td>
                      </tr>
                      <tr>
                        <td>
                          <p>{!g.home_scorers?.includes("null")? g.home_scorers[0].split(',').join(', ') : ''}</p>
                        </td>
                        <td>
                          <p>{!g.away_scorers?.includes("null")? g.away_scorers[0].split(',').join(', '): ''}</p>
                        </td>
                      </tr>
                    </table>


                  </div>
                ) :
                'loading...'

          }
        </div>
      </main>

      <footer className={styles.footer}>
          Created with ‚ù§Ô∏è by pgiu from üá¶üá∑
      </footer>
    </div>
  )
}

export async function getStaticProps() {
  const res = await fetch(`${process.env.NEXT_PUBLIC_API}/api/today`)
  const {games, error} = await res.json()

  return {
    props: {
      games: games || null,
      error: error || null,
    },
    // Next.js will attempt to re-generate the page:
    // - When a request comes in
    // - At most once every 10 seconds
    revalidate: 60, // In seconds
  }
}
